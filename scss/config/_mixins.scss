// Media query mixin
@mixin mq($value) {
	@if not map-has-key($breakpoints, $value) {
		@media screen and (min-width: $value) {
			@content;
		}
	} @else {
		@media screen and (min-width: map-get($breakpoints, $value)) {
			@content;
		}
	}
}

@mixin container {
	max-width: $max-width;
	padding  : 0 $container-padding;
	margin   : 0 auto;
	display  : flex;
	flex-wrap: wrap;
}

@mixin grid-system {
	display: grid;
	grid-template-columns: repeat($columns, 1fr);
	grid-gap: var(--grid-gap);
	width: 100%;
}

@mixin box-shadow {
	box-shadow: 0px 10px 15px -3px rgba(0,0,0,0.1);
}

@mixin burger-menu(
	$width: 40px, 
	$height: 5px, 
	$color: #fff,
	$br-radius: 0,
	$transition-time: .3s
) {
	width: $width;
	height: $height;
	background: $color;
	border-radius: $br-radius;
	transition: all $transition-time ease-in-out;
}

@mixin reset {
	margin: 0;
	padding: 0;
}

@mixin columns($class-name, $num-columns: $columns) {
	@for $i from 1 through 12 {
		@if $i > 0 and $i <= 12 {
			.#{$class-name}-#{$i} {
				grid-column: span #{$i};
			}
		}
	}
}

@mixin background-image($class-name, $filter-color: transparent) {
  background: $filter-color;

  #{$class-name} img {
    top: 0;
    width     : 100%;
    height    : 100%;
    object-fit: cover;
    position  : absolute;
    z-index: var(--z-back);
  }
}

@mixin square($size, $border-radius: 0, $bg-color: transparent) {
  width: $size;
  height: $size;
  border-radius: $border-radius;
  background: $bg-color;
}
